package com.konnect.jpms.performance;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;
import org.apache.struts2.interceptor.ServletRequestAware;

import com.konnect.jpms.util.CommonFunctions;
import com.konnect.jpms.util.Database;
import com.konnect.jpms.util.IStatements;
import com.konnect.jpms.util.UtilityFunctions;
import com.opensymphony.xwork2.ActionSupport;

public class AutoGeneratedRevieweePanel extends ActionSupport implements ServletRequestAware, IStatements {
	private static final long serialVersionUID = 1L;
	HttpSession session;
	CommonFunctions CF;

	String strUserType;
	String strSessionEmpId;
	private String empids;
	private String managerLevelUp;
	private String subordinateLevelDown;
	private String orientationType;
	
	public String execute() throws Exception {
		session = request.getSession();
		CF = (CommonFunctions) session.getAttribute(CommonFunctions);
		if (CF == null)
			return LOGIN;
		strUserType = (String) session.getAttribute(USERTYPE);
		strSessionEmpId = (String) session.getAttribute(EMPID);
		UtilityFunctions uF = new UtilityFunctions();
		
		
		getRevieweePanelForReview(uF);
		return SUCCESS;

	}
	
	public void getRevieweePanelForReview(UtilityFunctions uF) {
		Connection con = null;
		Database db = new Database();
		db.setRequest(request);

		try {
			con = db.makeConnection(con);
			
			List<String> alOrientationMembers = CF.getOrientationMembers(con, uF, request, getOrientationType());
			
			List<String> alEmpIds = new ArrayList<String>();
			if(getEmpids() != null && !getEmpids().equals("")) {
				alEmpIds = Arrays.asList(getEmpids().split(","));
			}
			
//			System.out.println("alEmpIds ===>> " + alEmpIds);
			StringBuilder sbAllRevieweePanalist = new StringBuilder(); //table_no_border 
			sbAllRevieweePanalist.append("<table class=\"table table-bordered autoWidth\" width=\"100%\">" +
					"<tr><th>Reviewee Name:</th>");
			
				if(alOrientationMembers.contains("Sub-ordinate")) {
					sbAllRevieweePanalist.append("<th>Sub-ordinates:</th>");
				}
				if(alOrientationMembers.contains("Peer")) {
					sbAllRevieweePanalist.append("<th>Peers:</th>");
				}
				if(alOrientationMembers.contains("Other Peer")) {
					sbAllRevieweePanalist.append("<th>Other Peers:</th>");
				}
				if(alOrientationMembers.contains("Manager")) {
					sbAllRevieweePanalist.append("<th>Managers:</th>");
				}
				if(alOrientationMembers.contains("GroupHead")) {
					sbAllRevieweePanalist.append("<th>Grand Managers:</th>");
				}
				if(alOrientationMembers.contains("HOD")) {
					sbAllRevieweePanalist.append("<th>HODs:</th>");
				}
				if(alOrientationMembers.contains("CEO")) {
					sbAllRevieweePanalist.append("<th>CEOs:</th>");
				}
				if(alOrientationMembers.contains("HR")) {
					sbAllRevieweePanalist.append("<th>HRs:</th>");
				}
				if(alOrientationMembers.contains("Anyone")) {
					sbAllRevieweePanalist.append("<th>Anyone:</th>");
	//			} else if(alOrientationMembers.contains("Managers")) {
					
				}
				sbAllRevieweePanalist.append("</tr>");
				
//				<th style="text-align: right">Orientation Type:</th>
//				<td colspan="6"><s:select theme="simple" name="oreinted" id="oreinted" cssClass="form-control" list="orientationList" listKey="id"
//						listValue="name" value="orientedValue" />  <!-- onchange="showMembersSelect(this.value);" -->
//						<span style="float: right;" id="spanOreint"></span>
//				</td>
//			</tr>
			
//			System.out.println("alEmpIds ===>> "+ alEmpIds);
			StringBuilder sbEmpName = null;
			StringBuilder sbEmpIds = null;
			
			Map<String, String> hmEmpName = CF.getEmpNameMap(con, null, null);
			Map<String, String> hmEmpManagerId = CF.getEmpSupervisorIdMap(con);
			Map<String, String> hmEmpLevelId = CF.getEmpLevelMap(con);
			Map<String, String> hmEmpDepartId = CF.getEmpDepartmentMap(con);
			Map<String, String> hmEmpWLocId = CF.getEmpWlocationMap(con);
			
			for(int i=0; alEmpIds != null && !alEmpIds.isEmpty() && i<alEmpIds.size(); i++) {
				if(uF.parseToInt(alEmpIds.get(i))>0) {
					sbAllRevieweePanalist.append("<tr>");
					sbAllRevieweePanalist.append("<td>"+hmEmpName.get(alEmpIds.get(i))+"</td>");
					
					if(alOrientationMembers.contains("Sub-ordinate")) {
						sbAllRevieweePanalist.append("<td>"+getRevieweeSubordinates(con, uF, alEmpIds.get(i), hmEmpName)+"</td>");
					}
					if(alOrientationMembers.contains("Peer")) {
						sbAllRevieweePanalist.append("<td>"+getRevieweePeers(con, uF, alEmpIds.get(i), hmEmpName, hmEmpManagerId, hmEmpLevelId, hmEmpDepartId)+"</td>");
					}
					if(alOrientationMembers.contains("Other Peer")) {
//						sbAllRevieweePanalist.append("<td>"+getRevieweeOtherPeers(con, uF, alEmpIds.get(i))+"</td>");
						sbAllRevieweePanalist.append("<td></td>");
					}
					if(alOrientationMembers.contains("Manager")) {
						sbAllRevieweePanalist.append("<td>"+getRevieweeManagers(con, uF, alEmpIds.get(i), hmEmpName)+"</td>");
					}
					if(alOrientationMembers.contains("GroupHead")) {
						sbAllRevieweePanalist.append("<td></td>");
					}
					if(alOrientationMembers.contains("HOD")) {
						sbAllRevieweePanalist.append("<td>"+getRevieweeHOD(con, uF, alEmpIds.get(i), hmEmpName)+"</td>");
					}
					if(alOrientationMembers.contains("CEO")) {
						sbAllRevieweePanalist.append("<td>"+getRevieweeCEO(con, uF, alEmpIds.get(i), hmEmpName, hmEmpWLocId)+"</td>");
					}
					if(alOrientationMembers.contains("HR")) {
						sbAllRevieweePanalist.append("<td>"+getRevieweeHR(con, uF, alEmpIds.get(i), hmEmpName)+"</td>");
					}
					if(alOrientationMembers.contains("Anyone")) {
						sbAllRevieweePanalist.append("<td></td>");
//					} else if(alOrientationMembers.contains("Managers")) {
						
					}
					sbAllRevieweePanalist.append("</tr>");
				}
			}
			sbAllRevieweePanalist.append("</table>");
			
//			System.out.println("STATUS_MSG ====>>> " + sbEmpIds+"::::"+sbEmpName);
			request.setAttribute("STATUS_MSG", sbAllRevieweePanalist.toString());
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			db.closeConnection(con);
		}
	}
	
	
	private String getRevieweeHR(Connection con, UtilityFunctions uF, String revieweeId, Map<String, String> hmEmpName) { 
		PreparedStatement pst = null;
		ResultSet rs = null;
		StringBuilder sbHR = new StringBuilder();

		try {
			StringBuilder sbQuery = new StringBuilder();
			StringBuilder myHR = new StringBuilder(); //"<u>Primary Peer:</u> "
			int myMCnt=0;
				sbQuery.append("select * from employee_personal_details epd, employee_official_details eod WHERE epd.is_alive=true and eod.emp_id>0 " +
					"and epd.emp_per_id=eod.emp_id and approved_flag=true and emp_per_id="+uF.parseToInt(revieweeId));
				pst = con.prepareStatement(sbQuery.toString());
				rs = pst.executeQuery();
				while(rs.next()) {
					if(uF.parseToInt(revieweeId)!=rs.getInt("emp_hr") && rs.getInt("emp_hr")>0) {
						if(rs.isLast()) {
							myHR.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"hrs_"+revieweeId+"_"+rs.getString("emp_hr")+"\"><input type=\"hidden\" name=\"hrsId_"+revieweeId+"\" value=\""+rs.getString("emp_hr")+"\" />"+hmEmpName.get(rs.getString("emp_hr"))+" <a onclick=\"removeRevieweePanelMember('hrs_"+revieweeId+"_"+rs.getString("emp_hr")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>");
						} else {
							myHR.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"hrs_"+revieweeId+"_"+rs.getString("emp_hr")+"\"><input type=\"hidden\" name=\"hrsId_"+revieweeId+"\" value=\""+rs.getString("emp_hr")+"\" />"+hmEmpName.get(rs.getString("emp_hr"))+" <a onclick=\"removeRevieweePanelMember('hrs_"+revieweeId+"_"+rs.getString("emp_hr")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>, ");
						}
						myMCnt++;
					}
				}
				rs.close();
				pst.close();
			
			if(myMCnt>0) {
				sbHR.append(myHR.toString().trim().substring(0, myHR.toString().trim().length()-1));
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return sbHR.toString();
	}
	
	
	private String getRevieweeCEO(Connection con, UtilityFunctions uF, String revieweeId, Map<String, String> hmEmpName, Map<String, String> hmEmpWLocId) { 
		PreparedStatement pst = null;
		ResultSet rs = null;
		StringBuilder sbCEO = new StringBuilder();

		try {
			StringBuilder sbQuery = new StringBuilder();
			StringBuilder myCEO = new StringBuilder(); //"<u>Primary Peer:</u> "
			int myMCnt=0;
				sbQuery.append("select * from employee_personal_details epd, employee_official_details eod, user_details ud WHERE epd.is_alive=true and eod.emp_id>0 " +
					"and epd.emp_per_id=eod.emp_id and eod.emp_id=ud.emp_id and approved_flag=true and ud.wlocation_id_access like '%,"+hmEmpWLocId.get(revieweeId)+",%' and usertype_id=5");
				pst = con.prepareStatement(sbQuery.toString());
				rs = pst.executeQuery();
				while(rs.next()) {
					if(uF.parseToInt(revieweeId)!=rs.getInt("emp_per_id") && rs.getInt("emp_per_id")>0) {
						if(rs.isLast()) {
							myCEO.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"ceos_"+revieweeId+"_"+rs.getString("emp_per_id")+"\"><input type=\"hidden\" name=\"ceosId_"+revieweeId+"\" value=\""+rs.getString("emp_per_id")+"\" />"+hmEmpName.get(rs.getString("emp_per_id"))+" <a onclick=\"removeRevieweePanelMember('ceos_"+revieweeId+"_"+rs.getString("emp_per_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>");
						} else {
							myCEO.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"ceos_"+revieweeId+"_"+rs.getString("emp_per_id")+"\"><input type=\"hidden\" name=\"ceosId_"+revieweeId+"\" value=\""+rs.getString("emp_per_id")+"\" />"+hmEmpName.get(rs.getString("emp_per_id"))+" <a onclick=\"removeRevieweePanelMember('ceos_"+revieweeId+"_"+rs.getString("emp_per_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>, ");
						}
						myMCnt++;
					}
				}
				rs.close();
				pst.close();
			
			if(myMCnt>0) {
				sbCEO.append(myCEO.toString().trim().substring(0, myCEO.toString().trim().length()-1));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return sbCEO.toString();
	}
	
	
	private String getRevieweeHOD(Connection con, UtilityFunctions uF, String revieweeId, Map<String, String> hmEmpName) { 
		PreparedStatement pst = null;
		ResultSet rs = null;
		StringBuilder sbHOD = new StringBuilder();

		try {
			
			StringBuilder sbQuery = new StringBuilder();
			StringBuilder myHOD = new StringBuilder(); //"<u>Primary Peer:</u> "
			int myMCnt=0;
			sbQuery.append("select * from employee_personal_details epd, employee_official_details eod WHERE epd.is_alive=true and eod.emp_id>0 " +
				"and epd.emp_per_id=eod.emp_id and approved_flag=true and emp_per_id="+uF.parseToInt(revieweeId));
			pst = con.prepareStatement(sbQuery.toString());
			rs = pst.executeQuery();
			while(rs.next()) {
				if(uF.parseToInt(revieweeId)!=rs.getInt("hod_emp_id") && rs.getInt("hod_emp_id")>0) {
					if(rs.isLast()) {
						myHOD.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"hods_"+revieweeId+"_"+rs.getString("hod_emp_id")+"\"><input type=\"hidden\" name=\"hodsId_"+revieweeId+"\" value=\""+rs.getString("hod_emp_id")+"\" />"+hmEmpName.get(rs.getString("hod_emp_id"))+" <a onclick=\"removeRevieweePanelMember('hods_"+revieweeId+"_"+rs.getString("hod_emp_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>");
					} else {
						myHOD.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"hods_"+revieweeId+"_"+rs.getString("hod_emp_id")+"\"><input type=\"hidden\" name=\"hodsId_"+revieweeId+"\" value=\""+rs.getString("hod_emp_id")+"\" />"+hmEmpName.get(rs.getString("hod_emp_id"))+" <a onclick=\"removeRevieweePanelMember('hods_"+revieweeId+"_"+rs.getString("hod_emp_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>, ");
					}
					myMCnt++;
				}
			}
			rs.close();
			pst.close();
			
			if(myMCnt>0) {
				sbHOD.append(myHOD.toString().trim().substring(0, myHOD.toString().trim().length()-1));
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return sbHOD.toString();
	}
	
	
	private String getRevieweeSubordinates(Connection con, UtilityFunctions uF, String revieweeId, Map<String, String> hmEmpName) { 
		PreparedStatement pst = null;
		ResultSet rs = null;
		StringBuilder sbSubordinates = new StringBuilder();
		try {
			StringBuilder mySubordinates = new StringBuilder(); //"<u>Primary Peer:</u> "
			setSubordinateLevelDown("3");
			String empId = revieweeId;
			int intSubordinateLevelDown = uF.parseToInt(getSubordinateLevelDown());
			int myMCnt=0;
			for(int i=0; i<intSubordinateLevelDown; i++) {
				pst = con.prepareStatement("select * from employee_personal_details epd, employee_official_details eod WHERE epd.is_alive=true and eod.emp_id>0 " +
						"and epd.emp_per_id=eod.emp_id and approved_flag=true and supervisor_emp_id in ("+revieweeId+") ");
				rs = pst.executeQuery();
//				System.out.println("pst ====>>> " + pst);
				StringBuilder sbSubEmpIds=null;
				while(rs.next()) {
					if(uF.parseToInt(revieweeId)!=rs.getInt("emp_per_id") && rs.getInt("emp_per_id")>0) {
						if(rs.isLast()) {
							mySubordinates.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"subordinates_"+empId+"_"+rs.getString("emp_per_id")+"\"><input type=\"hidden\" name=\"subordinatesId_"+empId+"\" value=\""+rs.getString("emp_per_id")+"\" />"+hmEmpName.get(rs.getString("emp_per_id"))+" <a onclick=\"removeRevieweePanelMember('subordinates_"+empId+"_"+rs.getString("emp_per_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>");
						} else {
							mySubordinates.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"subordinates_"+empId+"_"+rs.getString("emp_per_id")+"\"><input type=\"hidden\" name=\"subordinatesId_"+empId+"\" value=\""+rs.getString("emp_per_id")+"\" />"+hmEmpName.get(rs.getString("emp_per_id"))+" <a onclick=\"removeRevieweePanelMember('subordinates_"+empId+"_"+rs.getString("emp_per_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>, ");
						}
						myMCnt++;
						if(sbSubEmpIds==null) {
							sbSubEmpIds = new StringBuilder();
							sbSubEmpIds.append(rs.getString("emp_per_id"));
						} else {
							sbSubEmpIds.append(","+rs.getString("emp_per_id"));
						}
					}
				}
				rs.close();
				pst.close();
				if(sbSubEmpIds==null) {
					break;
				}
//				System.out.println("sbSubEmpIds.toString() ===>>" + sbSubEmpIds.toString());
				revieweeId = sbSubEmpIds.toString();
//				System.out.println("revieweeId ===>> " + revieweeId);
			}
			
			if(myMCnt>0) {
				sbSubordinates.append(mySubordinates.toString().trim().substring(0, mySubordinates.toString().trim().length()-1));
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return sbSubordinates.toString();
	}
	
	
	private String getRevieweeManagers(Connection con, UtilityFunctions uF, String revieweeId, Map<String, String> hmEmpName) { 
		PreparedStatement pst = null;
		ResultSet rs = null;
		StringBuilder sbManagers = new StringBuilder();

		try {
			
			StringBuilder myManagers = new StringBuilder(); //"<u>Primary Peer:</u> "
			setManagerLevelUp("3");
			String empId = revieweeId;
			int intManagerLevelUp = uF.parseToInt(getManagerLevelUp());
			int myMCnt=0;
			for(int i=0; i<intManagerLevelUp; i++) {
				pst = con.prepareStatement("select * from employee_personal_details epd, employee_official_details eod WHERE epd.is_alive=true and eod.emp_id>0 " +
						"and epd.emp_per_id=eod.emp_id and approved_flag=true and emp_per_id="+uF.parseToInt(revieweeId));
				rs = pst.executeQuery();
				while(rs.next()) {
					if(uF.parseToInt(revieweeId)!=rs.getInt("supervisor_emp_id") && rs.getInt("supervisor_emp_id")>0) {
						if(rs.isLast()) {
							myManagers.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"managers_"+empId+"_"+rs.getString("supervisor_emp_id")+"\"><input type=\"hidden\" name=\"managersId_"+empId+"\" value=\""+rs.getString("supervisor_emp_id")+"\" />"+hmEmpName.get(rs.getString("supervisor_emp_id"))+" <a onclick=\"removeRevieweePanelMember('managers_"+empId+"_"+rs.getString("supervisor_emp_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>");
						} else {
							myManagers.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"managers_"+empId+"_"+rs.getString("supervisor_emp_id")+"\"><input type=\"hidden\" name=\"managersId_"+empId+"\" value=\""+rs.getString("supervisor_emp_id")+"\" />"+hmEmpName.get(rs.getString("supervisor_emp_id"))+" <a onclick=\"removeRevieweePanelMember('managers_"+empId+"_"+rs.getString("supervisor_emp_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>, ");
						}
						myMCnt++;
						revieweeId = rs.getString("supervisor_emp_id");
					}
				}
				rs.close();
				pst.close();
			}
			
			if(myMCnt>0) {
				sbManagers.append(myManagers.toString().trim());
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return sbManagers.toString();
	}
	

//	private String getRevieweeOtherPeers(Connection con, UtilityFunctions uF, String string) {
//		// TODO Auto-generated method stub
//		return "";
//	}

	private String getRevieweePeers(Connection con, UtilityFunctions uF, String revieweeId, Map<String, String> hmEmpName, Map<String, String> hmEmpManagerId, Map<String, String> hmEmpLevelId, Map<String, String> hmEmpDepartId) { 
		PreparedStatement pst = null;
		ResultSet rs = null;
		StringBuilder sbPeers = new StringBuilder();

		try {
			
			StringBuilder sbQuery = new StringBuilder();
			StringBuilder myPeer = new StringBuilder("<u>Primary Peer:</u> ");
			StringBuilder levelPeer = new StringBuilder("<br/><u>Secondary Peer:</u> ");
			StringBuilder departPeer = new StringBuilder("<br/><u>Departmental Peer:</u> ");
			String empManagerId = hmEmpManagerId.get(revieweeId);
			String empLevelId = hmEmpLevelId.get(revieweeId);
			String empDepartId = hmEmpDepartId.get(revieweeId);
			
			sbQuery.append("Select * from employee_personal_details epd, employee_official_details eod WHERE epd.is_alive=true and eod.emp_id>0 " +
				"and epd.emp_per_id=eod.emp_id and approved_flag=true ");
			sbQuery.append(" and (supervisor_emp_id="+uF.parseToInt(empManagerId)+" or grade_id in (select gd.grade_id from grades_details gd, " +
				"level_details ld, designation_details dd where gd.designation_id = dd.designation_id and dd.level_id = ld.level_id and " +
				"ld.level_id = "+uF.parseToInt(empLevelId)+") or depart_id="+uF.parseToInt(empDepartId)+")");
			pst = con.prepareStatement(sbQuery.toString());
//			pst.setInt(1, uF.parseToInt(getOrientationType()));
			rs = pst.executeQuery();
			int myPCnt=0;
			int mySCnt=0;
			int myTCnt=0;
			while(rs.next()) {
				if(uF.parseToInt(revieweeId)!=rs.getInt("emp_per_id") && uF.parseToInt(empManagerId) == rs.getInt("supervisor_emp_id")) {
//					if(myPeer == null) {
						myPeer.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"peers_"+revieweeId+"_"+rs.getString("emp_per_id")+"\"><input type=\"hidden\" name=\"peersId_"+revieweeId+"\" value=\""+rs.getString("emp_per_id")+"\" />"+hmEmpName.get(rs.getString("emp_per_id"))+" <a onclick=\"removeRevieweePanelMember('peers_"+revieweeId+"_"+rs.getString("emp_per_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>, ");
//					} else {
//						myPeer.append(", <span id=\"peers_"+revieweeId+"_"+rs.getString("emp_per_id")+"\"><input type=\"hidden\" name=\"managersId_"+revieweeId+"\" value=\""+rs.getString("emp_per_id")+"\" />"+hmEmpName.get(rs.getString("emp_per_id"))+" <a onclick=\"removeRevieweePanelMember('managers_"+revieweeId+"_"+rs.getString("supervisor_emp_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span> ");
//					}
					myPCnt++;
				} else if(uF.parseToInt(revieweeId)!=rs.getInt("emp_per_id") && uF.parseToInt(empLevelId) == uF.parseToInt(hmEmpLevelId.get(rs.getInt("emp_per_id")))) {
					levelPeer.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"peers_"+revieweeId+"_"+rs.getString("emp_per_id")+"\"><input type=\"hidden\" name=\"peersId_"+revieweeId+"\" value=\""+rs.getString("emp_per_id")+"\" />"+hmEmpName.get(rs.getString("emp_per_id"))+" <a onclick=\"removeRevieweePanelMember('peers_"+revieweeId+"_"+rs.getString("emp_per_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>, ");
					levelPeer.append(hmEmpName.get(rs.getString("emp_per_id"))+", ");
					mySCnt++;
				} else if(uF.parseToInt(revieweeId)!=rs.getInt("emp_per_id") && uF.parseToInt(empDepartId) == uF.parseToInt(hmEmpDepartId.get(rs.getInt("emp_per_id")))) {
					departPeer.append("<span style=\"background-color: #f6f6f6; border-radius: 5px; padding: 2px 0px; margin-right: 3px;\" id=\"peers_"+revieweeId+"_"+rs.getString("emp_per_id")+"\"><input type=\"hidden\" name=\"peersId_"+revieweeId+"\" value=\""+rs.getString("emp_per_id")+"\" />"+hmEmpName.get(rs.getString("emp_per_id"))+" <a onclick=\"removeRevieweePanelMember('peers_"+revieweeId+"_"+rs.getString("emp_per_id")+"');\" href=\"javascript: void(0);\" style=\"color: red;\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>"+"</span>, ");
//					departPeer.append(hmEmpName.get(rs.getString("emp_per_id"))+", ");
					myTCnt++;
				}
			}
			rs.close();
			pst.close();
			if(myPCnt>0) {
//				sbPeers.append(myPeer.toString().trim().substring(0, myPeer.toString().trim().length()-1));
				sbPeers.append(myPeer.toString().trim());
			}
			if(mySCnt>0) {
				sbPeers.append(levelPeer.toString().trim());
			}
			if(myTCnt>0) {
				sbPeers.append(departPeer.toString().trim());
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return sbPeers.toString();
	}

	
	private HttpServletRequest request;

	@Override
	public void setServletRequest(HttpServletRequest request) {
		this.request = request;

	}

	public String getEmpids() {
		return empids;
	}

	public void setEmpids(String empids) {
		this.empids = empids;
	}

	public String getOrientationType() {
		return orientationType;
	}

	public void setOrientationType(String orientationType) {
		this.orientationType = orientationType;
	}

	public String getManagerLevelUp() {
		return managerLevelUp;
	}

	public void setManagerLevelUp(String managerLevelUp) {
		this.managerLevelUp = managerLevelUp;
	}

	public String getSubordinateLevelDown() {
		return subordinateLevelDown;
	}

	public void setSubordinateLevelDown(String subordinateLevelDown) {
		this.subordinateLevelDown = subordinateLevelDown;
	}

}
